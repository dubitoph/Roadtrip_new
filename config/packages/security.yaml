security:
    encoders:
        App\Entity\User\User:
            algorithm: bcrypt
            cost: 12
    role_hierarchy:
        ROLE_OWNER:       [ROLE_USER]
        ROLE_ADMIN:       [ROLE_OWNER]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_database:
            entity: 
                class: 'App\Entity\user\User'
                property: 'email'
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern:   ^/
            anonymous: true
            
            user_checker: App\Security\UserChecker
            
            provider: in_database

            form_login: 
                login_path: security.login
                check_path: security.login
                default_target_path: /user/dashbord
                csrf_token_generator: security.csrf.token_manager

            logout:
                path: security.logout
                target: /

            remember_me:
                secret:   '%kernel.secret%'

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate 
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    
    access_control:
        - { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        # - { path: ^/backend, roles: ROLE_ADMIN }
        # - { path: ^/owner, roles: ROLE_OWNER }
        # - { path: ^/profile, roles: ROLE_USER }